generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email String @id @db.VarChar(50)
  password String @db.VarChar(200)
  fullName String @db.VarChar(100)
  phoneNumber String @db.VarChar(15)
  role String @db.VarChar(10)
  token String? @db.VarChar(100)

  reviews Review[]
  reservations Reservation[]

  @@map("users") 
}

model Review {
  reviewID Int @id @default(autoincrement())
  starRating Int
  comment String @db.VarChar(200)

  email String @db.VarChar(50)

  user User @relation(fields: [email], references: [email])

  @@map("reviews")
}

model Reservation {
  reservationID Int @id @default(autoincrement())
  fullname String @db.VarChar(100)
  startTime DateTime
  endTime DateTime
  
  email String @db.VarChar(50)
  user User @relation(fields: [email], references: [email])

  serviceName String @db.VarChar(100)
  service Service @relation(fields: [serviceName], references: [serviceName])

  branchID Int
  branch Branch @relation(fields: [branchID], references: [branchID])

  @@map("reservations")
}

model Service {
  serviceName String @id @db.VarChar(100)
  duration Int

  reservations Reservation[]
  branches BranchService[]

  @@map("services")
}

model Branch {
  branchID Int @id @default(autoincrement())
  name String @db.VarChar(50)
  locationName String @db.VarChar(100)
  openTime String @db.VarChar(5)
  closeTime String @db.VarChar(5)

  services BranchService[]
  reservations Reservation[]

  @@map("branches")
}

model BranchService {
  branchID Int
  serviceName String @db.VarChar(100)
  branch Branch @relation(fields: [branchID], references: [branchID])
  service Service @relation(fields: [serviceName], references: [serviceName])

  @@id([branchID, serviceName])

  @@map("branchservices")
}