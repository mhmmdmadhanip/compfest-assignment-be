generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email String @id @db.VarChar(50)
  password String @db.VarChar(200)
  fullName String @db.VarChar(100)
  phoneNumber String @db.VarChar(15)
  role Role
  token String? @db.VarChar(100)

  reviews Review[]
  reservations Reservation[]

  @@map("users") 
}

enum Role {
  Customer
  Admin
}

model Review {
  reviewID Int @id @default(autoincrement())
  starRating Int
  comment String @db.VarChar(200)
  email String @db.VarChar(50)
  serviceID Int?
  branchID Int?

  user User @relation(fields: [email], references: [email])
  branchService BranchService? @relation(fields: [branchID, serviceID], references: [branchID, serviceID])

  @@unique([email, serviceID])
  @@unique([email, branchID])

  @@map("reviews")
}

model Reservation {
  reservationID Int @id @default(autoincrement())
  fullname String @db.VarChar(100)
  startTime DateTime
  endTime DateTime
  email String @db.VarChar(50)
  serviceID Int
  branchID Int

  user User @relation(fields: [email], references: [email])
  branchService BranchService @relation(fields: [branchID, serviceID], references: [branchID, serviceID])

  @@map("reservations")
}

model Service {
  serviceID Int @id @default(autoincrement())
  serviceName String @unique @db.VarChar(100)
  duration Int

  branches BranchService[]
  @@map("services")
}

model Branch {
  branchID Int @id @default(autoincrement())
  name String @db.VarChar(50)
  locationName String @db.VarChar(100)
  openTime String @db.VarChar(5)
  closeTime String @db.VarChar(5)

  services BranchService[]

  @@map("branches")
}

model BranchService {
  branchID Int
  serviceID Int
  branch Branch @relation(fields: [branchID], references: [branchID])
  service Service @relation(fields: [serviceID], references: [serviceID])

  reservations Reservation[]
  reviews Review[]
  
  @@id([branchID, serviceID])
  
  @@map("branchservices")
}